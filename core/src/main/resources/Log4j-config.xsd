<?xml version="1.0" encoding="UTF-8"?>
<!--
 Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.

-->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" attributeFormDefault="unqualified">
    <xs:element name="configuration" type="configurationType"/>
    <xs:complexType name="configurationType">
        <xs:sequence>
            <xs:element name="properties" type="propertiesType"/>
            <xs:choice minOccurs="0" maxOccurs="1">
                <xs:element name="filters" type="filtersType"/>
                <xs:element name="filter" type="filterType"/>
            </xs:choice>
            <xs:element name="thresholdFilter" type="thresholdFilterType"/>
            <xs:element name="appenders" type="appendersType"/>
            <xs:element name="loggers" type="loggersType"/>
        </xs:sequence>
        <xs:attribute name="packages" type="xs:string"/>
        <xs:attribute name="status" type="xs:string"/>
        <xs:attribute name="strict" type="xs:string"/>
        <xs:attribute name="name" type="xs:string"/>
        <xs:attribute name="advertiser" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="propertiesType">
        <xs:sequence>
            <xs:element name="property" type="propertyType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="appenderType">
        <xs:sequence>
            <xs:element name="layout" type="layoutType" minOccurs="0"/>
            <xs:choice minOccurs="0" maxOccurs="1">
                <xs:element name="filters" type="filtersType"/>
                <xs:element name="filter" type="filterType"/>
            </xs:choice>
        </xs:sequence>
        <xs:attribute name="type" type="xs:string" use="required"/>
        <xs:attribute name="name" type="xs:string" use="required"/>
        <xs:attribute name="fileName" type="xs:string" use="optional"/>
    </xs:complexType>
    <xs:complexType name="rootType">
        <xs:sequence>
            <xs:element name="appender-ref" type="appender-refType" minOccurs="1" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="level" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="propertyType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute name="name" type="xs:string"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="KeyValuePairType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute name="key" type="xs:string"/>
                <xs:attribute name="value" type="xs:string"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="appendersType">
        <xs:sequence>
            <xs:element name="appender" type="appenderType" minOccurs="1" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="appender-refType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute name="ref" type="xs:string" use="required"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="loggerType">
        <xs:sequence>
            <xs:choice minOccurs="0" maxOccurs="1">
                <xs:element name="filters" type="filtersType"/>
                <xs:element name="filter" type="filterType"/>
            </xs:choice>
            <xs:element name="appender-ref" type="appender-refType"/>
        </xs:sequence>
        <xs:attribute name="name" type="xs:string" use="required"/>
        <xs:attribute name="level" type="xs:string" use="optional"/>
        <xs:attribute name="additivity" type="xs:string" use="optional"/>
    </xs:complexType>
    <xs:complexType name="filterType" mixed="true">
        <xs:sequence>
            <xs:element name="KeyValuePair" type="KeyValuePairType" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute name="type" type="xs:string" use="required"/>
        <xs:attribute name="level" type="xs:string" use="optional"/>
        <xs:attribute name="marker" type="xs:string" use="optional"/>
        <xs:attribute name="onMatch" type="xs:string" use="optional"/>
        <xs:attribute name="onMismatch" type="xs:string" use="optional"/>
    </xs:complexType>
    <xs:complexType name="filtersType">
        <xs:sequence>
            <xs:element name="filter" type="filterType" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="loggersType" mixed="true">
        <xs:sequence>
            <xs:element name="logger" type="loggerType" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="root" type="rootType" minOccurs="1" maxOccurs="1"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="layoutType" mixed="true">
        <xs:sequence>
            <xs:element name="pattern" type="xs:string" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute name="type" type="xs:string" use="required"/>
        <xs:attribute name="pattern" type="xs:string" use="optional"/>
    </xs:complexType>
    <xs:complexType name="thresholdFilterType">
        <xs:attribute name="level" type="xs:string" use="optional"/>
        <xs:attribute name="onMatch" type="xs:string" use="optional"/>
        <xs:attribute name="onMismatch" type="xs:string" use="optional"/>
    </xs:complexType>
</xs:schema>
